module convex_poly(l) {
     hull() { for (point=l) translate (point) cube(0.0001); }
};

// compute the sum of a list of vectors
function sum_vects(l) = (len(l) == 0) ? [0,0,0] :
     sum_vects([for (i = [0:1:len(l)-2]) l[i]]) + l[len(l)-1];

// Todo : generate with a rec module
perm4 = [[0,1,2,3],[0,1,3,2],[0,2,1,3],[0,2,3,1],[0,3,1,2],[0,3,2,1],
	 [1,0,2,3],[1,0,3,2],[1,2,0,3],[1,2,3,0],[1,3,0,2],[1,3,2,0],
	 [2,0,1,3],[2,0,3,1],[2,1,0,3],[2,1,3,0],[2,3,0,1],[2,3,1,0],
	 [3,0,1,2],[3,0,2,1],[3,1,0,2],[3,1,2,0],[3,2,0,1],[3,2,1,0]];

ass4 =  [[0,1,2,3],[0,1,3,2],[0,2,1,3],         ,[0,3,1,2],[0,3,2,1],
	 [1,0,2,3],[1,0,3,2],         ,         ,         ,         ,
	 [2,0,1,3],         ,[2,1,0,3],         ,         ,         ,
	 [3,0,1,2],[3,0,2,1],[3,1,0,2],         ,[3,2,0,1],[3,2,1,0]];

cube4 = [[0,1,2,3],[0,1,3,2],         ,         ,[0,3,1,2],[0,3,2,1],
	          ,         ,         ,         ,         ,         ,
	          ,         ,         ,         ,         ,         ,
	 [3,0,1,2],[3,0,2,1],         ,         ,[3,2,0,1],[3,2,1,0]];

// projection matrix 4D -> 3D
projmatrix = [[1, 0, 0], [0, 1, 0], [0, 0, 1], [-1/3, -1/3, -1/3]];

// scale(10) convex_poly([for (p=perm4) p * projmatrix]);
scale(10) convex_poly([for (p=ass4) p * projmatrix]);
scale(10) convex_poly([for (p=cube4) p * projmatrix]);


